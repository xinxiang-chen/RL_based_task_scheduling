import pandas as pd

data = {
    "Metrics": ["Makespan"] * 15,
    "Dataset": (["Random"] * 5) + (["GoCJ"] * 5) + (["Synthetic"] * 5),
    "Task": [100, 200, 500, 800, 1000] * 3,
    "RR": [
        2022.92, 3890.29, 6078.03, 4934.35, 6276.78,
        5486.25, 9513.12, 15921.97, 11432.47, 16106.22,
        372.84, 637.58, 914.38, 717.02, 755.84,
    ],
    "PSO": [
        1851.99, 3347.93, 5296.96, 4570.71, 6096.00,
        4646.25, 9541.50, 13769.36, 12261.23, 15868.48,
        228.10, 534.37, 836.12, 608.05, 693.93,
    ],
    "DRL-TS": [
        1470.35, 3019.29, 3275.55, 2820.30, 3516.18,
        4348.34, 8672.42, 8539.12, 7461.44, 9395.55,
        206.62, 414.05, 406.87, 515.84, 540.38,
    ],
}

# data = {
#     "Metrics": ["Total Cost"] * 15,
#     "Dataset": (["Random"] * 5) + (["GoCJ"] * 5) + (["Synthetic"] * 5),
#     "Task": [100, 200, 500, 800, 1000] * 3,
#     "RR": [
#         19.88, 39.11, 65.68, 106.99, 134.36,
#         56.49, 104.19, 176.23, 247.79, 354.67,
#         3.10, 5.57, 8.62, 13.54, 15.92,
#     ],
#     "PSO": [
#         18.52, 36.30, 60.55, 99.77, 131.24,
#         51.06, 105.07, 160.66, 265.91, 321.79,
#         2.15, 5.18, 7.97, 12.66, 15.83,
#     ],
#     "DRL-TS": [
#         16.51, 33.33, 24.32, 41.92, 45.72,
#         40.97, 91.31, 77.66, 144.56, 216.83,
#         1.92, 4.08, 4.36, 9.28, 10.72,
#     ],
# }

# data = {
#     "Metrics": ["Utilization"] * 15,
#     "Dataset": (["Random"] * 5) + (["GoCJ"] * 5) + (["Synthetic"] * 5),
#     "Task": [100, 200, 500, 800, 1000] * 3,
#     "RR": [
#         0.768, 0.792, 0.592, 0.593, 0.584,
#         0.804, 0.894, 0.600, 0.610, 0.597,
#         0.597, 0.662, 0.509, 0.517, 0.600,
#     ],
#     "PSO": [
#         0.809, 0.889, 0.651, 0.616, 0.598,
#         0.903, 0.896, 0.659, 0.592, 0.577,
#         0.817, 0.764, 0.531, 0.589, 0.651,
#     ],
#     "DRL-TS": [
#         0.958, 0.942, 0.709, 0.676, 0.754,
#         0.880, 0.903, 0.762, 0.715, 0.778,
#         0.802, 0.872, 0.827, 0.578, 0.659,
#     ],
# }


# data = {
#     "Metrics": ["Imbalance"] * 15,
#     "Dataset": (["Random"] * 5) + (["GoCJ"] * 5) + (["Synthetic"] * 5),
#     "Task": [100, 200, 500, 800, 1000] * 3,
#     "RR": [
#         0.21, 0.19, 0.42, 0.43, 0.44,
#         0.25, 0.10, 0.51, 0.41, 0.47,
#         0.45, 0.34, 0.40, 0.41, 0.38,
#     ],
#     "PSO": [
#         0.16, 0.08, 0.35, 0.40, 0.41,
#         0.08, 0.14, 0.41, 0.46, 0.37,
#         0.19, 0.21, 0.35, 0.35, 0.39,
#     ],
#     "DRL-TS": [
#         0.02, 0.02, 0.08, 0.41, 0.15,
#         0.07, 0.07, 0.06, 0.19, 0.05,
#         0.05, 0.11, 0.11, 0.19, 0.16,
#     ],
# }

df = pd.DataFrame(data)
# Calculate improvement columns relative to RR baseline
df['DRL_TS_vs_RR'] = (df['DRL-TS'] - df['RR']) / df['RR']
df['DRL_TS_vs_PSO'] = (df['DRL-TS'] - df['PSO']) / df['PSO']

# Display the updated dataframe
print(df)

avg_pso_vs_rr = df['DRL_TS_vs_RR'].mean()
avg_drl_ts_vs_rr = df['DRL_TS_vs_PSO'].mean()

print(f"Average DRL_TS_vs_RR: {avg_pso_vs_rr:.4f}")
print(f"Average DRL_TS_vs_PSO: {avg_drl_ts_vs_rr:.4f}")

# 10.35 35.11
# 6.85 38.41
# 8.59 22.78
# 19.29 67.02

# 
# 38.41 33.40
# 22.78 13.73
# 67.02 59.21